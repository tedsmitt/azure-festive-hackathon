name: Santawishlist app build and deploy

on:
  push:
    branches:
      - main
    paths:
      - "**.tf"
      - "src/**"
  # Include manual trigger for simplicity of demo
  workflow_dispatch:

jobs:
  plan-terraform:
    runs-on: ubuntu-latest

    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
      - uses: actions/checkout@main

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.13.2

      - name: Initialise terraform
        id: init
        run: |
          cd terraform
          terraform init

      - name: Plan terraform
        run: |
          cd terraform
          terraform plan -out tfplan
        id: plan

      - uses: actions/upload-artifact@v2
        with:
          name: tfplan
          path: terraform/tfplan

  apply-terraform:
    needs: plan-terraform
    runs-on: ubuntu-latest
    outputs:
      acr_repo: ${{ steps.apply.outputs.acr_repo }}

    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
      - uses: actions/checkout@main

      - uses: actions/download-artifact@v2
        with:
          name: tfplan
          path: terraform/

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.13.2
          # This allows us to use the terraform output command easily
          terraform_wrapper: false
          
      - name: Initialise terraform
        id: init
        run: |
          cd terraform
          terraform init

      - name: Apply terraform
        run: |
          cd terraform
          terraform apply -auto-approve tfplan
          echo "::set-output name=acr_repo::$(terraform output acr_repository_name)"
        id: apply

  build-and-push-image:
    needs: apply-terraform
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@main

    - name: Azure Container Registry login
      run: |
        az login --service-principal --username ${{ secrets.ARM_CLIENT_ID }} --password ${{ secrets.ARM_CLIENT_SECRET }} --tenant ${{ secrets.ARM_TENANT_ID }}
        az acr login --name ${{ needs.apply-terraform.outputs.acr_repo }}
    
    - name: Docker Build
      run: docker build -t ${{ needs.apply-terraform.outputs.acr_repo }}.azurecr.io/santawishlist:latest -f build/Dockerfile .

    - name: Docker Push
      run: docker push ${{ needs.apply-terraform.outputs.acr_repo }}.azurecr.io/santawishlist:latest
 